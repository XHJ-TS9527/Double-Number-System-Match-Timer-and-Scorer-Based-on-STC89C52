PUBLIC ENTER_TIME
EXTRN CODE (KEYBOARD_SCAN)
ENTER_TIME:	;最终四位数的各位值存放在0区R3~R6中,具体的位数是0区R0-3位
MOV R0,#03H
MOV @R0,#0
KEYBOARD_INPUT:
LCALL KEYBOARD_SCAN
CJNE R7,#77H,SECOND
CJNE R0,#07H,INPUT1
AJMP ILLEAGLE_INPUT
INPUT1:
MOV @R0,#1 ;键入1
AJMP NUM_INPUT
SECOND:
CJNE R7,#7BH,THIRD
CJNE R0,#07H,INPUT2
AJMP ILLEAGLE_INPUT
INPUT2:
MOV @R0,#2 ;键入2
AJMP NUM_INPUT
THIRD:
CJNE R7,#7DH,FORTH
CJNE R0,#07H,INPUT3
AJMP ILLEAGLE_INPUT
INPUT3:
MOV @R0,#3 ;键入3
AJMP NUM_INPUT
FORTH:
CJNE R7,#7EH,FIFTH
CJNE R0,#03H,BACKSPACE
AJMP ILLEAGLE_INPUT
BACKSPACE:
DEC R0 ;键入退格
AJMP ILLEAGLE_INPUT
FIFTH:
CJNE R7,#0B7H,SIXTH
CJNE R0,#07H,INPUT4
AJMP ILLEAGLE_INPUT
INPUT4:
MOV @R0,#4 ;键入4
AJMP NUM_INPUT
SIXTH:
CJNE R7,#0BBH,SEVENTH
CJNE R0,#07H,INPUT5
AJMP ILLEAGLE_INPUT
INPUT5:
MOV @R0,#5 ;键入5
AJMP NUM_INPUT
SEVENTH:
CJNE R7,#0BDH,EIGHTH
CJNE R0,#07H,INPUT6
AJMP ILLEAGLE_INPUT
INPUT6:
MOV @R0,#6 ;键入6
AJMP NUM_INPUT
EIGHTH:
CJNE R7,#0D7H,NINTH
CJNE R0,#07H,INPUT7
AJMP ILLEAGLE_INPUT
INPUT7:
MOV @R0,#7 ;键入7
AJMP NUM_INPUT
NINTH:
CJNE R7,#0DBH,TENTH
CJNE R0,#07H,INPUT8
AJMP ILLEAGLE_INPUT
INPUT8:
MOV @R0,#8 ;键入8
AJMP NUM_INPUT
TENTH:
CJNE R7,#0DDH,ELEVENTH
CJNE R7,#07H,INPUT9
AJMP ILLEAGLE_INPUT
INPUT9:
MOV @R0,#9 ;键入9
AJMP NUM_INPUT
ELEVENTH:
CJNE R7,#0EBH,TWELVETH
CJNE R0,#07H,INPUT0
AJMP ILLEAGLE_INPUT
INPUT0:
MOV @R0,#0 ;键入0
AJMP NUM_INPUT
THIRTEEN:
CJNE R7,#0BEH,NEAR_ILLEAGLE_INPUT
MOV R0,#03H ;清空
NEAR_ILLEAGLE_INPUT:
AJMP ILLEAGLE_INPUT
TWELVETH:
CJNE R7,#0EEH,THIRTEEN
CLR 01H
MOV 16H,#00H
MOV 17H,#00H
;键入确认
;如果合法，那么总秒数低8位会存放在2区R7中，高8位存放在2区R6中
;各位存放在0区R3~R6中，位数+3放在0区R0中
CJNE R0,#07H,MAX_THREE_NUM
;有四位:R3:千位 R4:百位 R5:十位 R6:个位
MOV B,#10
MOV A,R5
MUL AB
ADD A,R6
MOV 15H,A ;10×十位+个位放在2区R5
MOV B,#100
MOV A,R4
MUL AB
ADD A,15H
XCH A,B
ADDC A,#00H
MOV 16H,A ;100×百位+10×十位+个位高8位放在2区R6
MOV 17H,B ;100×百位+10×十位+个位低8位放在2区R7
MOV B,#4
MOV A,R3
MUL AB
MOV B,#250
MUL AB
ADD A,17H
XCH A,B
ADDC A,16H
MOV 16H,A ;真正数据高8位放在2区R6
MOV 17H,B ;真正数据低8位放在2区R2
;去前导零
MOV A,R3
JNZ GO_TO_RETURN_4
MOV A,R4
MOV R3,A
MOV A,R5
MOV R4,A
MOV A,R6
MOV R5,A
DEC R0
MOV A,R3
JZ EXCLUDE_ZERO_3
GO_TO_RETURN_4:
RET
MAX_THREE_NUM:
CJNE R0,#06H,MAX_TWO_NUM
;有三位:R3:百位 R4:十位 R5:个位
MOV A,R4
MOV B,#10H
MUL AB
ADD A,R5
MOV 17H,A ;10×十位+个位放在2区R7
MOV A,R3
MOV B,#100
MUL AB
ADD A,17H
XCH A,B
ADDC A,#00H
MOV 16H,A ;真正数据高8位放在2区R6
MOV 17H,B ;真正数据低8位放在2区R7
;去前导零
EXCLUDE_ZERO_3:
MOV A,R3
JNZ GO_TO_RETURN_3
MOV A,R4
MOV R3,A
MOV A,R5
MOV R4,A
DEC R0
MOV A,R3
JZ EXCLUDE_ZERO_2
GO_TO_RETURN_3:
RET
MAX_TWO_NUM:
CJNE R0,#05H,MAX_ONE_NUM
;有两位:R3:十位 R4:个位
MOV A,R3
MOV B,#10
MUL AB
ADD A,R4
MOV 16H,#00H ;真正数据高8位放在2区R6
MOV 17H,A ;真正数据低8位放在2区R7
;去前导零
EXCLUDE_ZERO_2:
MOV A,R3
JNZ GO_TO_RETURN_2
MOV A,R4
MOV R3,A
DEC R0
GO_TO_RETURN_2:
RET
MAX_ONE_NUM:
CJNE R0,#04H,NO_NUMBER_INPUT
;有一位:R3:个位
MOV 16H,#00H ;真正数据高8位放在2区R6
MOV 17H,R3 ;真正数据低8位放在2区R7                                                                                                                                                                         
RET
NO_NUMBER_INPUT: ;没有输入，重新输入
AJMP ENTER_TIME
NUM_INPUT:
INC R0
ILLEAGLE_INPUT: ;输入无效
CLR 01H	;清除键盘输入标志位
AJMP KEYBOARD_INPUT
END